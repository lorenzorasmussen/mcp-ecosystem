name: Documentation Synchronization

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 9 AM UTC
    - cron: '0 9 * * *'

jobs:
  documentation-sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install -g @github/cli
        npm install
    
    - name: Run documentation synchronization
      run: |
        node scripts/documentation-sync.js --dry-run
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Generate documentation health report
      run: |
        node scripts/documentation-health.js
    
    - name: Upload health report
      uses: actions/upload-artifact@v4
      with:
        name: documentation-health-report
        path: health-report.json
    
    - name: Comment PR with health status
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const healthReport = JSON.parse(fs.readFileSync('health-report.json', 'utf8'));
          
          const comment = `
          ## 📊 Documentation Health Report
          
          **Overall Score**: ${healthReport.overall}%
          
          | Metric | Score |
          |--------|-------|
          | Coverage | ${healthReport.coverage}% |
          | Freshness | ${healthReport.freshness}% |
          | Drift | ${healthReport.drift}% |
          | Quality | ${healthReport.quality}% |
          
          ${healthReport.overall < 80 ? '⚠️ Documentation needs attention!' : '✅ Documentation is healthy!'}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  documentation-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install markdownlint
      run: npm install -g markdownlint-cli
    
    - name: Check markdown formatting
      run: |
        find docs/ -name "*.md" -exec markdownlint {} \;
    
    - name: Check for broken links
      run: |
        npm install -g markdown-link-check
        find docs/ -name "*.md" -exec markdown-link-check {} \;
    
    - name: Validate specifications
      run: |
        node scripts/validate-specs.js

  spec-kit-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Spec-Kit
      run: |
        pip install uv
        uvx --from git+https://github.com/github/spec-kit.git specify --version
    
    - name: Validate specifications
      run: |
        specify validate specs/ || true
    
    - name: Check specification completeness
      run: |
        node scripts/check-spec-completeness.js