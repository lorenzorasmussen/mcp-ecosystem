apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-client-bridge
  namespace: default
  labels:
    app: mcp-client-bridge
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: mcp-client-bridge
  template:
    metadata:
      labels:
        app: mcp-client-bridge
    spec:
      containers:
      - name: mcp-client-bridge
        image: mcp-client-bridge:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: PORT
          value: "3000"
        - name: NODE_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        envFrom:
        - secretRef:
            name: mcp-client-bridge-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: mcp-data
          mountPath: /app/data
        - name: mcp-logs
          mountPath: /app/logs
      volumes:
      - name: mcp-data
        persistentVolumeClaim:
          claimName: mcp-data-pvc
      - name: mcp-logs
        persistentVolumeClaim:
          claimName: mcp-logs-pvc
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 2000